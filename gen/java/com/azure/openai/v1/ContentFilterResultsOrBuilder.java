// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: azure/openai/v1/completions.proto
// Protobuf Java Version: 4.27.0

package com.azure.openai.v1;

public interface ContentFilterResultsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:azure.openai.v1.ContentFilterResults)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.azure.openai.v1.ContentFilterResult sexual = 1 [json_name = "sexual"];</code>
   * @return Whether the sexual field is set.
   */
  boolean hasSexual();
  /**
   * <code>.azure.openai.v1.ContentFilterResult sexual = 1 [json_name = "sexual"];</code>
   * @return The sexual.
   */
  com.azure.openai.v1.ContentFilterResult getSexual();
  /**
   * <code>.azure.openai.v1.ContentFilterResult sexual = 1 [json_name = "sexual"];</code>
   */
  com.azure.openai.v1.ContentFilterResultOrBuilder getSexualOrBuilder();

  /**
   * <code>.azure.openai.v1.ContentFilterResult violence = 2 [json_name = "violence"];</code>
   * @return Whether the violence field is set.
   */
  boolean hasViolence();
  /**
   * <code>.azure.openai.v1.ContentFilterResult violence = 2 [json_name = "violence"];</code>
   * @return The violence.
   */
  com.azure.openai.v1.ContentFilterResult getViolence();
  /**
   * <code>.azure.openai.v1.ContentFilterResult violence = 2 [json_name = "violence"];</code>
   */
  com.azure.openai.v1.ContentFilterResultOrBuilder getViolenceOrBuilder();

  /**
   * <code>.azure.openai.v1.ContentFilterResult hate = 3 [json_name = "hate"];</code>
   * @return Whether the hate field is set.
   */
  boolean hasHate();
  /**
   * <code>.azure.openai.v1.ContentFilterResult hate = 3 [json_name = "hate"];</code>
   * @return The hate.
   */
  com.azure.openai.v1.ContentFilterResult getHate();
  /**
   * <code>.azure.openai.v1.ContentFilterResult hate = 3 [json_name = "hate"];</code>
   */
  com.azure.openai.v1.ContentFilterResultOrBuilder getHateOrBuilder();

  /**
   * <code>.azure.openai.v1.ContentFilterResult self_harm = 4 [json_name = "selfHarm"];</code>
   * @return Whether the selfHarm field is set.
   */
  boolean hasSelfHarm();
  /**
   * <code>.azure.openai.v1.ContentFilterResult self_harm = 4 [json_name = "selfHarm"];</code>
   * @return The selfHarm.
   */
  com.azure.openai.v1.ContentFilterResult getSelfHarm();
  /**
   * <code>.azure.openai.v1.ContentFilterResult self_harm = 4 [json_name = "selfHarm"];</code>
   */
  com.azure.openai.v1.ContentFilterResultOrBuilder getSelfHarmOrBuilder();

  /**
   * <code>.azure.openai.v1.ContentFilterResult profanity = 5 [json_name = "profanity"];</code>
   * @return Whether the profanity field is set.
   */
  boolean hasProfanity();
  /**
   * <code>.azure.openai.v1.ContentFilterResult profanity = 5 [json_name = "profanity"];</code>
   * @return The profanity.
   */
  com.azure.openai.v1.ContentFilterResult getProfanity();
  /**
   * <code>.azure.openai.v1.ContentFilterResult profanity = 5 [json_name = "profanity"];</code>
   */
  com.azure.openai.v1.ContentFilterResultOrBuilder getProfanityOrBuilder();

  /**
   * <code>.azure.openai.v1.ContentFilterResult jailbreak = 6 [json_name = "jailbreak"];</code>
   * @return Whether the jailbreak field is set.
   */
  boolean hasJailbreak();
  /**
   * <code>.azure.openai.v1.ContentFilterResult jailbreak = 6 [json_name = "jailbreak"];</code>
   * @return The jailbreak.
   */
  com.azure.openai.v1.ContentFilterResult getJailbreak();
  /**
   * <code>.azure.openai.v1.ContentFilterResult jailbreak = 6 [json_name = "jailbreak"];</code>
   */
  com.azure.openai.v1.ContentFilterResultOrBuilder getJailbreakOrBuilder();

  /**
   * <code>.azure.openai.v1.Error error = 7 [json_name = "error"];</code>
   * @return Whether the error field is set.
   */
  boolean hasError();
  /**
   * <code>.azure.openai.v1.Error error = 7 [json_name = "error"];</code>
   * @return The error.
   */
  com.azure.openai.v1.Error getError();
  /**
   * <code>.azure.openai.v1.Error error = 7 [json_name = "error"];</code>
   */
  com.azure.openai.v1.ErrorOrBuilder getErrorOrBuilder();
}
