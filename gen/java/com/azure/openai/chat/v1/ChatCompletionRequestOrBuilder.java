// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: azure/openai/chat/v1/completions.proto
// Protobuf Java Version: 4.27.0

package com.azure.openai.chat.v1;

public interface ChatCompletionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:azure.openai.chat.v1.ChatCompletionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>float temperature = 1 [json_name = "temperature"];</code>
   * @return The temperature.
   */
  float getTemperature();

  /**
   * <code>float top_p = 2 [json_name = "topP"];</code>
   * @return The topP.
   */
  float getTopP();

  /**
   * <code>bool stream = 3 [json_name = "stream"];</code>
   * @return The stream.
   */
  boolean getStream();

  /**
   * <code>repeated string stops = 4 [json_name = "stop"];</code>
   * @return A list containing the stops.
   */
  java.util.List<java.lang.String>
      getStopsList();
  /**
   * <code>repeated string stops = 4 [json_name = "stop"];</code>
   * @return The count of stops.
   */
  int getStopsCount();
  /**
   * <code>repeated string stops = 4 [json_name = "stop"];</code>
   * @param index The index of the element to return.
   * @return The stops at the given index.
   */
  java.lang.String getStops(int index);
  /**
   * <code>repeated string stops = 4 [json_name = "stop"];</code>
   * @param index The index of the value to return.
   * @return The bytes of the stops at the given index.
   */
  com.google.protobuf.ByteString
      getStopsBytes(int index);

  /**
   * <code>uint32 max_tokens = 5 [json_name = "maxTokens"];</code>
   * @return The maxTokens.
   */
  int getMaxTokens();

  /**
   * <code>float presence_penalty = 6 [json_name = "presencePenalty"];</code>
   * @return The presencePenalty.
   */
  float getPresencePenalty();

  /**
   * <code>float frequency_penalty = 7 [json_name = "frequencyPenalty"];</code>
   * @return The frequencyPenalty.
   */
  float getFrequencyPenalty();

  /**
   * <code>map&lt;string, float&gt; logit_bias = 8 [json_name = "logitBias"];</code>
   */
  int getLogitBiasCount();
  /**
   * <code>map&lt;string, float&gt; logit_bias = 8 [json_name = "logitBias"];</code>
   */
  boolean containsLogitBias(
      java.lang.String key);
  /**
   * Use {@link #getLogitBiasMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.Float>
  getLogitBias();
  /**
   * <code>map&lt;string, float&gt; logit_bias = 8 [json_name = "logitBias"];</code>
   */
  java.util.Map<java.lang.String, java.lang.Float>
  getLogitBiasMap();
  /**
   * <code>map&lt;string, float&gt; logit_bias = 8 [json_name = "logitBias"];</code>
   */
  float getLogitBiasOrDefault(
      java.lang.String key,
      float defaultValue);
  /**
   * <code>map&lt;string, float&gt; logit_bias = 8 [json_name = "logitBias"];</code>
   */
  float getLogitBiasOrThrow(
      java.lang.String key);

  /**
   * <code>string user = 9 [json_name = "user"];</code>
   * @return The user.
   */
  java.lang.String getUser();
  /**
   * <code>string user = 9 [json_name = "user"];</code>
   * @return The bytes for user.
   */
  com.google.protobuf.ByteString
      getUserBytes();

  /**
   * <code>repeated .azure.openai.chat.v1.ChatCompletionRequestMessage messages = 10 [json_name = "messages"];</code>
   */
  java.util.List<com.azure.openai.chat.v1.ChatCompletionRequestMessage> 
      getMessagesList();
  /**
   * <code>repeated .azure.openai.chat.v1.ChatCompletionRequestMessage messages = 10 [json_name = "messages"];</code>
   */
  com.azure.openai.chat.v1.ChatCompletionRequestMessage getMessages(int index);
  /**
   * <code>repeated .azure.openai.chat.v1.ChatCompletionRequestMessage messages = 10 [json_name = "messages"];</code>
   */
  int getMessagesCount();
  /**
   * <code>repeated .azure.openai.chat.v1.ChatCompletionRequestMessage messages = 10 [json_name = "messages"];</code>
   */
  java.util.List<? extends com.azure.openai.chat.v1.ChatCompletionRequestMessageOrBuilder> 
      getMessagesOrBuilderList();
  /**
   * <code>repeated .azure.openai.chat.v1.ChatCompletionRequestMessage messages = 10 [json_name = "messages"];</code>
   */
  com.azure.openai.chat.v1.ChatCompletionRequestMessageOrBuilder getMessagesOrBuilder(
      int index);

  /**
   * <pre>
   * repeated DataSource data_sources = 11;
   * </pre>
   *
   * <code>uint32 n = 12 [json_name = "n"];</code>
   * @return The n.
   */
  int getN();

  /**
   * <pre>
   * ResponseFormat response_format = 14;
   * repeated Tool tools = 15;
   * ToolChoice tool_choice = 16;
   * repeated Function functions = 17;
   * FunctionCall function_call = 18;
   * </pre>
   *
   * <code>int64 seed = 13 [json_name = "seed"];</code>
   * @return The seed.
   */
  long getSeed();
}
