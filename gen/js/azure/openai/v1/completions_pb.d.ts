// @generated by protoc-gen-es v1.9.0
// @generated from file azure/openai/v1/completions.proto (package azure.openai.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Choice, Error } from "./entity_pb.js";

/**
 * @generated from message azure.openai.v1.CompletionRequest
 */
export declare class CompletionRequest extends Message<CompletionRequest> {
  /**
   * @generated from field: string model = 1;
   */
  model: string;

  /**
   * @generated from field: string object = 2;
   */
  object: string;

  /**
   * @generated from field: string id = 3;
   */
  id: string;

  /**
   * @generated from field: uint32 created = 4;
   */
  created: number;

  /**
   * @generated from field: repeated azure.openai.v1.Choice choices = 5;
   */
  choices: Choice[];

  constructor(data?: PartialMessage<CompletionRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "azure.openai.v1.CompletionRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompletionRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompletionRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompletionRequest;

  static equals(a: CompletionRequest | PlainMessage<CompletionRequest> | undefined, b: CompletionRequest | PlainMessage<CompletionRequest> | undefined): boolean;
}

/**
 * @generated from message azure.openai.v1.CompletionResponse
 */
export declare class CompletionResponse extends Message<CompletionResponse> {
  /**
   * @generated from field: azure.openai.v1.Error error = 1;
   */
  error?: Error;

  constructor(data?: PartialMessage<CompletionResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "azure.openai.v1.CompletionResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompletionResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompletionResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompletionResponse;

  static equals(a: CompletionResponse | PlainMessage<CompletionResponse> | undefined, b: CompletionResponse | PlainMessage<CompletionResponse> | undefined): boolean;
}

