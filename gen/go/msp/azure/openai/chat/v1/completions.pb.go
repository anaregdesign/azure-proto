// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: msp/azure/openai/chat/v1/completions.proto

package chatv1

import (
	v1 "github.com/anaregdesign/azure-proto/go/msp/azure/openai/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatCompletionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Temperature      float32                         `protobuf:"fixed32,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TopP             float32                         `protobuf:"fixed32,2,opt,name=top_p,json=topP,proto3" json:"top_p,omitempty"`
	Stream           bool                            `protobuf:"varint,3,opt,name=stream,proto3" json:"stream,omitempty"`
	Stops            []string                        `protobuf:"bytes,4,rep,name=stops,json=stop,proto3" json:"stops,omitempty"`
	MaxTokens        uint32                          `protobuf:"varint,5,opt,name=max_tokens,json=maxTokens,proto3" json:"max_tokens,omitempty"`
	PresencePenalty  float32                         `protobuf:"fixed32,6,opt,name=presence_penalty,json=presencePenalty,proto3" json:"presence_penalty,omitempty"`
	FrequencyPenalty float32                         `protobuf:"fixed32,7,opt,name=frequency_penalty,json=frequencyPenalty,proto3" json:"frequency_penalty,omitempty"`
	LogitBias        map[string]float32              `protobuf:"bytes,8,rep,name=logit_bias,json=logitBias,proto3" json:"logit_bias,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed32,2,opt,name=value,proto3"`
	User             string                          `protobuf:"bytes,9,opt,name=user,proto3" json:"user,omitempty"`
	Messages         []*ChatCompletionRequestMessage `protobuf:"bytes,10,rep,name=messages,proto3" json:"messages,omitempty"`
	// repeated DataSource data_sources = 11;
	N    uint32 `protobuf:"varint,12,opt,name=n,proto3" json:"n,omitempty"`
	Seed int64  `protobuf:"varint,13,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (x *ChatCompletionRequest) Reset() {
	*x = ChatCompletionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionRequest) ProtoMessage() {}

func (x *ChatCompletionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionRequest.ProtoReflect.Descriptor instead.
func (*ChatCompletionRequest) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{0}
}

func (x *ChatCompletionRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ChatCompletionRequest) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ChatCompletionRequest) GetStream() bool {
	if x != nil {
		return x.Stream
	}
	return false
}

func (x *ChatCompletionRequest) GetStops() []string {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *ChatCompletionRequest) GetMaxTokens() uint32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *ChatCompletionRequest) GetPresencePenalty() float32 {
	if x != nil {
		return x.PresencePenalty
	}
	return 0
}

func (x *ChatCompletionRequest) GetFrequencyPenalty() float32 {
	if x != nil {
		return x.FrequencyPenalty
	}
	return 0
}

func (x *ChatCompletionRequest) GetLogitBias() map[string]float32 {
	if x != nil {
		return x.LogitBias
	}
	return nil
}

func (x *ChatCompletionRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ChatCompletionRequest) GetMessages() []*ChatCompletionRequestMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChatCompletionRequest) GetN() uint32 {
	if x != nil {
		return x.N
	}
	return 0
}

func (x *ChatCompletionRequest) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

type ChatCompletionRequestMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ChatCompletionRequestMessage) Reset() {
	*x = ChatCompletionRequestMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionRequestMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionRequestMessage) ProtoMessage() {}

func (x *ChatCompletionRequestMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionRequestMessage.ProtoReflect.Descriptor instead.
func (*ChatCompletionRequestMessage) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{1}
}

func (x *ChatCompletionRequestMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatCompletionRequestMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type ChatCompletionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object              string                   `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Created             uint64                   `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Model               string                   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Usage               *Usage                   `protobuf:"bytes,5,opt,name=usage,proto3" json:"usage,omitempty"`
	SystemFingerprint   string                   `protobuf:"bytes,6,opt,name=system_fingerprint,json=systemFingerprint,proto3" json:"system_fingerprint,omitempty"`
	PromptFilterResults []*v1.PromptFilterResult `protobuf:"bytes,7,rep,name=prompt_filter_results,json=promptFilterResults,proto3" json:"prompt_filter_results,omitempty"`
	Choices             []*Choice                `protobuf:"bytes,8,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *ChatCompletionResponse) Reset() {
	*x = ChatCompletionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionResponse) ProtoMessage() {}

func (x *ChatCompletionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionResponse.ProtoReflect.Descriptor instead.
func (*ChatCompletionResponse) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{2}
}

func (x *ChatCompletionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatCompletionResponse) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ChatCompletionResponse) GetCreated() uint64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ChatCompletionResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatCompletionResponse) GetUsage() *Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *ChatCompletionResponse) GetSystemFingerprint() string {
	if x != nil {
		return x.SystemFingerprint
	}
	return ""
}

func (x *ChatCompletionResponse) GetPromptFilterResults() []*v1.PromptFilterResult {
	if x != nil {
		return x.PromptFilterResults
	}
	return nil
}

func (x *ChatCompletionResponse) GetChoices() []*Choice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromptTokens     uint64 `protobuf:"varint,1,opt,name=prompt_tokens,json=promptTokens,proto3" json:"prompt_tokens,omitempty"`
	CompletionTokens uint64 `protobuf:"varint,2,opt,name=completion_tokens,json=completionTokens,proto3" json:"completion_tokens,omitempty"`
	TotalTokens      uint64 `protobuf:"varint,3,opt,name=total_tokens,json=totalTokens,proto3" json:"total_tokens,omitempty"`
}

func (x *Usage) Reset() {
	*x = Usage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{3}
}

func (x *Usage) GetPromptTokens() uint64 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *Usage) GetCompletionTokens() uint64 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

func (x *Usage) GetTotalTokens() uint64 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

type Choice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index               uint32                         `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	FinishReason        string                         `protobuf:"bytes,2,opt,name=finish_reason,json=finishReason,proto3" json:"finish_reason,omitempty"`
	Message             *ChatCompletionResponseMessage `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ContentFilterResult *v1.ContentFilterChoiceResult  `protobuf:"bytes,4,opt,name=content_filter_result,json=content_filter_results,proto3" json:"content_filter_result,omitempty"`
}

func (x *Choice) Reset() {
	*x = Choice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Choice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Choice) ProtoMessage() {}

func (x *Choice) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Choice.ProtoReflect.Descriptor instead.
func (*Choice) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{4}
}

func (x *Choice) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Choice) GetFinishReason() string {
	if x != nil {
		return x.FinishReason
	}
	return ""
}

func (x *Choice) GetMessage() *ChatCompletionResponseMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Choice) GetContentFilterResult() *v1.ContentFilterChoiceResult {
	if x != nil {
		return x.ContentFilterResult
	}
	return nil
}

type ChatCompletionResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role         string                             `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content      string                             `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ToolCalls    []*ChatCompletionMessageToolCall   `protobuf:"bytes,3,rep,name=tool_calls,json=toolCalls,proto3" json:"tool_calls,omitempty"`
	FunctionCall *ChatCompletionFunctionCall        `protobuf:"bytes,4,opt,name=function_call,json=functionCall,proto3" json:"function_call,omitempty"`
	Context      *AzureChatExtensionsMessageContext `protobuf:"bytes,5,opt,name=context,proto3" json:"context,omitempty"`
}

func (x *ChatCompletionResponseMessage) Reset() {
	*x = ChatCompletionResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionResponseMessage) ProtoMessage() {}

func (x *ChatCompletionResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionResponseMessage.ProtoReflect.Descriptor instead.
func (*ChatCompletionResponseMessage) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{5}
}

func (x *ChatCompletionResponseMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatCompletionResponseMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatCompletionResponseMessage) GetToolCalls() []*ChatCompletionMessageToolCall {
	if x != nil {
		return x.ToolCalls
	}
	return nil
}

func (x *ChatCompletionResponseMessage) GetFunctionCall() *ChatCompletionFunctionCall {
	if x != nil {
		return x.FunctionCall
	}
	return nil
}

func (x *ChatCompletionResponseMessage) GetContext() *AzureChatExtensionsMessageContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type ChatCompletionMessageToolCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string                                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type     string                                  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Function *ChatCompletionMessageToolCall_Function `protobuf:"bytes,3,opt,name=function,proto3" json:"function,omitempty"`
}

func (x *ChatCompletionMessageToolCall) Reset() {
	*x = ChatCompletionMessageToolCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionMessageToolCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionMessageToolCall) ProtoMessage() {}

func (x *ChatCompletionMessageToolCall) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionMessageToolCall.ProtoReflect.Descriptor instead.
func (*ChatCompletionMessageToolCall) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{6}
}

func (x *ChatCompletionMessageToolCall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatCompletionMessageToolCall) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChatCompletionMessageToolCall) GetFunction() *ChatCompletionMessageToolCall_Function {
	if x != nil {
		return x.Function
	}
	return nil
}

type ChatCompletionFunctionCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Argument string `protobuf:"bytes,2,opt,name=argument,json=arguments,proto3" json:"argument,omitempty"`
}

func (x *ChatCompletionFunctionCall) Reset() {
	*x = ChatCompletionFunctionCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionFunctionCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionFunctionCall) ProtoMessage() {}

func (x *ChatCompletionFunctionCall) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionFunctionCall.ProtoReflect.Descriptor instead.
func (*ChatCompletionFunctionCall) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{7}
}

func (x *ChatCompletionFunctionCall) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatCompletionFunctionCall) GetArgument() string {
	if x != nil {
		return x.Argument
	}
	return ""
}

type AzureChatExtensionsMessageContext struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Citations []*AzureChatExtensionsMessageContext_Citation `protobuf:"bytes,1,rep,name=citations,proto3" json:"citations,omitempty"`
	Intent    string                                        `protobuf:"bytes,2,opt,name=intent,proto3" json:"intent,omitempty"`
}

func (x *AzureChatExtensionsMessageContext) Reset() {
	*x = AzureChatExtensionsMessageContext{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureChatExtensionsMessageContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureChatExtensionsMessageContext) ProtoMessage() {}

func (x *AzureChatExtensionsMessageContext) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureChatExtensionsMessageContext.ProtoReflect.Descriptor instead.
func (*AzureChatExtensionsMessageContext) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{8}
}

func (x *AzureChatExtensionsMessageContext) GetCitations() []*AzureChatExtensionsMessageContext_Citation {
	if x != nil {
		return x.Citations
	}
	return nil
}

func (x *AzureChatExtensionsMessageContext) GetIntent() string {
	if x != nil {
		return x.Intent
	}
	return ""
}

type ErrorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string                    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Param      string                    `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
	Type       string                    `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	InnerError *ErrorResponse_InnerError `protobuf:"bytes,5,opt,name=inner_error,json=innerError,proto3" json:"inner_error,omitempty"`
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{9}
}

func (x *ErrorResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorResponse) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

func (x *ErrorResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ErrorResponse) GetInnerError() *ErrorResponse_InnerError {
	if x != nil {
		return x.InnerError
	}
	return nil
}

type ChatCompletionMessageToolCall_Function struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Argument string `protobuf:"bytes,2,opt,name=argument,json=arguments,proto3" json:"argument,omitempty"`
}

func (x *ChatCompletionMessageToolCall_Function) Reset() {
	*x = ChatCompletionMessageToolCall_Function{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionMessageToolCall_Function) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionMessageToolCall_Function) ProtoMessage() {}

func (x *ChatCompletionMessageToolCall_Function) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionMessageToolCall_Function.ProtoReflect.Descriptor instead.
func (*ChatCompletionMessageToolCall_Function) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ChatCompletionMessageToolCall_Function) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatCompletionMessageToolCall_Function) GetArgument() string {
	if x != nil {
		return x.Argument
	}
	return ""
}

type AzureChatExtensionsMessageContext_Citation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content  string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Filepath string `protobuf:"bytes,4,opt,name=filepath,proto3" json:"filepath,omitempty"`
	ChunkId  string `protobuf:"bytes,5,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
}

func (x *AzureChatExtensionsMessageContext_Citation) Reset() {
	*x = AzureChatExtensionsMessageContext_Citation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureChatExtensionsMessageContext_Citation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureChatExtensionsMessageContext_Citation) ProtoMessage() {}

func (x *AzureChatExtensionsMessageContext_Citation) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureChatExtensionsMessageContext_Citation.ProtoReflect.Descriptor instead.
func (*AzureChatExtensionsMessageContext_Citation) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{8, 0}
}

func (x *AzureChatExtensionsMessageContext_Citation) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AzureChatExtensionsMessageContext_Citation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AzureChatExtensionsMessageContext_Citation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AzureChatExtensionsMessageContext_Citation) GetFilepath() string {
	if x != nil {
		return x.Filepath
	}
	return ""
}

func (x *AzureChatExtensionsMessageContext_Citation) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

type ErrorResponse_InnerError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                string                        `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ContentFilterResult *v1.ContentFilterPromptResult `protobuf:"bytes,2,opt,name=content_filter_result,json=content_filter_results,proto3" json:"content_filter_result,omitempty"`
}

func (x *ErrorResponse_InnerError) Reset() {
	*x = ErrorResponse_InnerError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorResponse_InnerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse_InnerError) ProtoMessage() {}

func (x *ErrorResponse_InnerError) ProtoReflect() protoreflect.Message {
	mi := &file_msp_azure_openai_chat_v1_completions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse_InnerError.ProtoReflect.Descriptor instead.
func (*ErrorResponse_InnerError) Descriptor() ([]byte, []int) {
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP(), []int{9, 0}
}

func (x *ErrorResponse_InnerError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ErrorResponse_InnerError) GetContentFilterResult() *v1.ContentFilterPromptResult {
	if x != nil {
		return x.ContentFilterResult
	}
	return nil
}

var File_msp_azure_openai_chat_v1_completions_proto protoreflect.FileDescriptor

var file_msp_azure_openai_chat_v1_completions_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6d, 0x73,
	0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x6d, 0x73, 0x70, 0x2f, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x04, 0x0a, 0x15, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x04, 0x74, 0x6f, 0x70, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x13, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x74, 0x6f, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x12, 0x2b, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x66, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x5d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x74, 0x5f, 0x62, 0x69, 0x61, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x3e, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x74, 0x42, 0x69, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x74, 0x42, 0x69, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x52, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x01, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x1a, 0x3c, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x74, 0x42,
	0x69, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0xef, 0x02, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x15, 0x70,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x73, 0x70, 0x2e,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x15, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x73, 0x70,
	0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x56, 0x0a, 0x0a, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75,
	0x72, 0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x09, 0x74, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x59, 0x0a, 0x0d, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x55, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75,
	0x72, 0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0xde, 0x01, 0x0a,
	0x1d, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x5c, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6f, 0x6c, 0x43, 0x61, 0x6c, 0x6c, 0x2e, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x3b, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x08, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x4d, 0x0a,
	0x1a, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x08, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa5, 0x02, 0x0a,
	0x21, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x62, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x63, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a, 0x83,
	0x01, 0x0a, 0x08, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x49, 0x64, 0x22, 0xc6, 0x02, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x53,
	0x0a, 0x0b, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0a, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x1a, 0x87, 0x01, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x65, 0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x42, 0xfd, 0x01,
	0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x73, 0x70, 0x2e, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x10,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6e, 0x61, 0x72, 0x65, 0x67, 0x64, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2f, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x6d, 0x73, 0x70, 0x2f, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x2f, 0x63, 0x68, 0x61, 0x74,
	0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x61, 0x74, 0x76, 0x31, 0xa2, 0x02, 0x04, 0x4d, 0x41, 0x4f,
	0x43, 0xaa, 0x02, 0x18, 0x4d, 0x73, 0x70, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x61, 0x69, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x18, 0x4d,
	0x73, 0x70, 0x5c, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x5c, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x5c,
	0x43, 0x68, 0x61, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24, 0x4d, 0x73, 0x70, 0x5c, 0x41, 0x7a,
	0x75, 0x72, 0x65, 0x5c, 0x4f, 0x70, 0x65, 0x6e, 0x61, 0x69, 0x5c, 0x43, 0x68, 0x61, 0x74, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x1c, 0x4d, 0x73, 0x70, 0x3a, 0x3a, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x3a, 0x3a, 0x4f, 0x70, 0x65,
	0x6e, 0x61, 0x69, 0x3a, 0x3a, 0x43, 0x68, 0x61, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_msp_azure_openai_chat_v1_completions_proto_rawDescOnce sync.Once
	file_msp_azure_openai_chat_v1_completions_proto_rawDescData = file_msp_azure_openai_chat_v1_completions_proto_rawDesc
)

func file_msp_azure_openai_chat_v1_completions_proto_rawDescGZIP() []byte {
	file_msp_azure_openai_chat_v1_completions_proto_rawDescOnce.Do(func() {
		file_msp_azure_openai_chat_v1_completions_proto_rawDescData = protoimpl.X.CompressGZIP(file_msp_azure_openai_chat_v1_completions_proto_rawDescData)
	})
	return file_msp_azure_openai_chat_v1_completions_proto_rawDescData
}

var file_msp_azure_openai_chat_v1_completions_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_msp_azure_openai_chat_v1_completions_proto_goTypes = []interface{}{
	(*ChatCompletionRequest)(nil),                      // 0: msp.azure.openai.chat.v1.ChatCompletionRequest
	(*ChatCompletionRequestMessage)(nil),               // 1: msp.azure.openai.chat.v1.ChatCompletionRequestMessage
	(*ChatCompletionResponse)(nil),                     // 2: msp.azure.openai.chat.v1.ChatCompletionResponse
	(*Usage)(nil),                                      // 3: msp.azure.openai.chat.v1.Usage
	(*Choice)(nil),                                     // 4: msp.azure.openai.chat.v1.Choice
	(*ChatCompletionResponseMessage)(nil),              // 5: msp.azure.openai.chat.v1.ChatCompletionResponseMessage
	(*ChatCompletionMessageToolCall)(nil),              // 6: msp.azure.openai.chat.v1.ChatCompletionMessageToolCall
	(*ChatCompletionFunctionCall)(nil),                 // 7: msp.azure.openai.chat.v1.ChatCompletionFunctionCall
	(*AzureChatExtensionsMessageContext)(nil),          // 8: msp.azure.openai.chat.v1.AzureChatExtensionsMessageContext
	(*ErrorResponse)(nil),                              // 9: msp.azure.openai.chat.v1.ErrorResponse
	nil,                                                // 10: msp.azure.openai.chat.v1.ChatCompletionRequest.LogitBiasEntry
	(*ChatCompletionMessageToolCall_Function)(nil),     // 11: msp.azure.openai.chat.v1.ChatCompletionMessageToolCall.Function
	(*AzureChatExtensionsMessageContext_Citation)(nil), // 12: msp.azure.openai.chat.v1.AzureChatExtensionsMessageContext.Citation
	(*ErrorResponse_InnerError)(nil),                   // 13: msp.azure.openai.chat.v1.ErrorResponse.InnerError
	(*v1.PromptFilterResult)(nil),                      // 14: msp.azure.openai.v1.PromptFilterResult
	(*v1.ContentFilterChoiceResult)(nil),               // 15: msp.azure.openai.v1.ContentFilterChoiceResult
	(*v1.ContentFilterPromptResult)(nil),               // 16: msp.azure.openai.v1.ContentFilterPromptResult
}
var file_msp_azure_openai_chat_v1_completions_proto_depIdxs = []int32{
	10, // 0: msp.azure.openai.chat.v1.ChatCompletionRequest.logit_bias:type_name -> msp.azure.openai.chat.v1.ChatCompletionRequest.LogitBiasEntry
	1,  // 1: msp.azure.openai.chat.v1.ChatCompletionRequest.messages:type_name -> msp.azure.openai.chat.v1.ChatCompletionRequestMessage
	3,  // 2: msp.azure.openai.chat.v1.ChatCompletionResponse.usage:type_name -> msp.azure.openai.chat.v1.Usage
	14, // 3: msp.azure.openai.chat.v1.ChatCompletionResponse.prompt_filter_results:type_name -> msp.azure.openai.v1.PromptFilterResult
	4,  // 4: msp.azure.openai.chat.v1.ChatCompletionResponse.choices:type_name -> msp.azure.openai.chat.v1.Choice
	5,  // 5: msp.azure.openai.chat.v1.Choice.message:type_name -> msp.azure.openai.chat.v1.ChatCompletionResponseMessage
	15, // 6: msp.azure.openai.chat.v1.Choice.content_filter_result:type_name -> msp.azure.openai.v1.ContentFilterChoiceResult
	6,  // 7: msp.azure.openai.chat.v1.ChatCompletionResponseMessage.tool_calls:type_name -> msp.azure.openai.chat.v1.ChatCompletionMessageToolCall
	7,  // 8: msp.azure.openai.chat.v1.ChatCompletionResponseMessage.function_call:type_name -> msp.azure.openai.chat.v1.ChatCompletionFunctionCall
	8,  // 9: msp.azure.openai.chat.v1.ChatCompletionResponseMessage.context:type_name -> msp.azure.openai.chat.v1.AzureChatExtensionsMessageContext
	11, // 10: msp.azure.openai.chat.v1.ChatCompletionMessageToolCall.function:type_name -> msp.azure.openai.chat.v1.ChatCompletionMessageToolCall.Function
	12, // 11: msp.azure.openai.chat.v1.AzureChatExtensionsMessageContext.citations:type_name -> msp.azure.openai.chat.v1.AzureChatExtensionsMessageContext.Citation
	13, // 12: msp.azure.openai.chat.v1.ErrorResponse.inner_error:type_name -> msp.azure.openai.chat.v1.ErrorResponse.InnerError
	16, // 13: msp.azure.openai.chat.v1.ErrorResponse.InnerError.content_filter_result:type_name -> msp.azure.openai.v1.ContentFilterPromptResult
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_msp_azure_openai_chat_v1_completions_proto_init() }
func file_msp_azure_openai_chat_v1_completions_proto_init() {
	if File_msp_azure_openai_chat_v1_completions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionRequestMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Usage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Choice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionMessageToolCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionFunctionCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureChatExtensionsMessageContext); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionMessageToolCall_Function); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureChatExtensionsMessageContext_Citation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_msp_azure_openai_chat_v1_completions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorResponse_InnerError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_msp_azure_openai_chat_v1_completions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_msp_azure_openai_chat_v1_completions_proto_goTypes,
		DependencyIndexes: file_msp_azure_openai_chat_v1_completions_proto_depIdxs,
		MessageInfos:      file_msp_azure_openai_chat_v1_completions_proto_msgTypes,
	}.Build()
	File_msp_azure_openai_chat_v1_completions_proto = out.File
	file_msp_azure_openai_chat_v1_completions_proto_rawDesc = nil
	file_msp_azure_openai_chat_v1_completions_proto_goTypes = nil
	file_msp_azure_openai_chat_v1_completions_proto_depIdxs = nil
}
